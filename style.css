.parent-container{background-color: beige;
border: 2px solid black;
width: 75vw;
height: 75vh;
padding: 5px;
font-family: Arial, Helvetica, sans-serif;
position: relative;
/* causes absolute to container to position inside parent container */
}


.child {padding: 25px}

.static{border: 2px sold red;
background-color: red;}
/* top bottom left right have no effect  because static */

.relative{border: 2px solid blueviolet;
background-color: blueviolet;
/* position: relative; */
top: 25px;
left: 25px;}
/* by default acts like static but can use top bottom left right to move relative
    to its static position of where it is supposed to be */

.absolute {border: 2px solid green;
background-color: green;}
/* position: absolute; 
top: 0;} */
/* takes element out of flow and when given top 0 is is relative to root that's NOT static
    used for absolutely positioning children */

.fixed{border: 2px solid teal;
background-color: teal;
/* position: fixed; */
top:0}
/* ignores parent and based on entire viewport and absolute on parent relative will scroll
    will not scroll away */

.sticky {border: 2px solid gray;
background-color: gray;
position: sticky;
top: 75px;}

/* acts like a combination of fixed and absolute 
stays fixed when scroll occurs and relative by default so it doesnt move out of normal flow*/




.display-container{margin-top: 2em;}


.block-container{border: 2px solid black;
margin-top: 2px;}
/* Display property treats an element as block or inline
blocks are created top-to-bottom
inline are side to side */

.inline-element {margin: 5x;
display: block;}

/* display blocks turns buttons into blocks and aligns them in a column */


.inline-block{border: 2px solid black;
margin-top: 2px;
display:inline-block;
width: 125px}
/* allows us to set the width and height of an inline element  */


.float-container {margin-top: 2em;
border: 2px solid blue;
height: 20vw;}

.float-box{margin: 5px;
border: 2px solid orange;
background-color: orange;
width: 50px;
height: 50px;
float:right}
/* float shifts elements from left to right */